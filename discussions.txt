Key:
    1n1 - One on One
    OH - Office Hours
    NS - Next Session
    3T - Team Tech Talk
    PTT - Presented To Team
    SE0*xx - Software Engineer Level *0-4 
    EM1*xx - Engineering Manager Level *1-3 

- - - - - Upcoming - - - - -

TODO:
    - read up on learning more about the metrics for cc velocity and vs analysis tools
    - add more detail to andr-1206, waiting for user example
    - look for code climate like tools to use in visual studio
    - influence use of action log
    - always be asking if there is a ticket to track what I am doing
    - How do I know what I am doing is working?
    - get some front end tests into LearnosityPlayer

3T
    - how has the refactoring been going? js side
    - learning more about the metrics for cc velocity and vs analysis tools

SE0JG 1n1
    - set meet up for angular tests
    - share findings in 1n1 with EM3MH if any

SE3EM 1n1
    - what do we do
    - going anywhere?

SE0DP 1n1
    - refactor practice
    - progress on action log

SE1AD 1n1
    - suggest action log
    - continue code challenge valid-parenthesis
    - pop quiz 

EM3MH 1n1
    - seriously what should we do
        - customers are unreliable
        - being combative for noreason
        - slack examples
        - seems like we can just ignore vp
        - tests or not?
        - no angular?
    - appreciation week
        - team ready to go

    - still a stigma against our stack, feels like discrimination
    - review action log
    - progress with presenting ideas to team, action log, 1% slight edge

SE4MN 1n1
    - will we see bias decreasing now that you have found what you are looking for?
    - activity for generating simple form view with django
    - if not react, how would you go about building a cross platform mobile app?

Team Meeting    
    - Service Bus vs Event Hub vs Event Grid, Topics, Subscriptions, yeah...?
    - progress on deployment strategy talks in leadership?

Cohorts
    - how many weeks left?
    - what comes next?
    - 
    - python, why should we learn it, can we motivate those who don't use it?
        - maybe we can get everyone excited about using it and create a culture around it
        - maybe pick a new language every year? or have 2 at a time so those who know python already can do C#..?

- - - - - Past - - - - -

4-22-22 3T
    - talked about our refactor 
    - do small things because we think they will lead to the big things we want
    - once we can move fast we can do other cool stuff
    - javascript refactor practice

4-22-22 Team Meeting
    - lead team through a review of an initial refactor of speedgrader.js, improved code climate score from F -> D
    - Interesting learnings from refactor of viewcontroller in LearnosityPlayer
        - code climate suggestions are not really what it wants
        - doing the typical refactors that we already know are what make the difference
        - liveshare is not that great for rotating (okay we admit it)

4-21-22 SE0DP 1n1
    - refactor practice
    - encourage action log
    - how to view leadership concerns


4-21-22 SE0JG 1n1
    - interest in angular tests?
        - sounds good, lets setup a meeting
    - encouraged action log
    - strategy for decompose stories
    - how to do refactor work and track things?

4-20-22 EM3MH 1n1
    - Encourage menteeships to also use an action log
    - probablynot a backfill for leaving team member with new team size?
        - leadership has not discussed yet
    - SE4 vacations delay cohorts, is this okay?
        - provides opportunity for others to step in, SE3's were asked
    - cohorts is planning on soft skills topic
    - Refactoring
        - take DP through simple refactors so can get exposure
        - I may not need extra practice as much as I think
        - try to only improve code in small steps when refactoring
    - concerns about tech stack bias, the divide
        - comments about us being slow, are these necessary?
        - does our vp and principal understand what they are talking about?
        - seems like we have no facts to back up comments being made
    - leadership effectiveness
        - bad things have been heard, but the majority is positive
    - teams are benefiting from vp involvement
        - football coach analogy
    - focus on mentoring adn influencing growth of others
        - also work on responding to incidents


4-15-22 Team Meeting
    - PTT teachable failure, tests are good, stale PRs are bad :(
    - talk about tech talk concerns
    - velocity used for micromanaging, when  

4-11-22 Cohorts 
    - what are the steps you take when doing a pull request?
    - what would it look like in a test to think about why the test is there?
        - the why can help when removing functionality
    - would be good to get deeper into tests when going over PRs

4-8-22 IET discusson about tech talk
    - still having trouble seeing it
    - remain hopefully optimistic
    - did a refactor that was suggested, rename viewModel files (to ...Response at SE3EM's suggestion)

4-8-22 - 3T
    - Learnosity Player expound on skinny controller
    - 3 steps to redesign
        - move non-resourceful controller to be resourceful ones
        - move logic from fat controllers to models
        - change routes to be resourceful (may not be needed, or not provide benefit)
    - We should be open to change tools if they do not make things fast
    - Make changes easy so you can make easy changes
    - we will have to determine .net conventions for fat models
    - MVVM vs MVC more info
        - difference between Model and View Model
    - What are our resources in LearnosityPlayer app?
        - /Assessment
        - /Session
        - /Launch
    - Separate models from view models

4-8-22 - SE0DP 1n1
    - tech focus, entity framework
    - dto and flow of data models
    - gaining familiarity
    - might prefer to do break away pairing
    - prefers fast video content media
        - structure feels too slow to get to an answer
        - note: follow up research on this since I share the same
    - growth plan topic
        - .net, angularjs, how to focus (advised to take notes) 
    - enjoy the most    
        - white boarding deep dive
        - decomposition
            - could use help finding the order of subtasks
    - gardening talk


4-7-22 - SE0JG
    - introduce
    - books
        - subtle art of not giving a f*
        - can't hurt me
        - astrophysics for people in a hurry
        - extreme ownership
    - outside perspective on things
    - focus on topics laid out by EM3MH

4-6-22 - EM3MH 1n1
    - Growth plans jam board
    - keep 1n1s focused on sprint work
    - maybe try more on the fly
    - work with growth plans that he is setting up
    - good to see follow up conversations after tech talks
    - keep team focus on topics 
    - influence growth but it does not have to be a goal
    - motivation could be an approach
    - see if we can split stories during decomp
        - dont start sprint until later in the day after decomp
    - plan during Planning
        - don't leave planning without having everything decomped
        - can anyone follow the steps?
    - growth plan doc: https://jamboard.google.com/d/1-P4Zziq1LkpUvTcpyYRgwJAldfWZCLRMebOjPj85WgQ/viewer?invite=CIK-wbwN&ts=624e03b2&token=AC4w5VjKL4Ut4nE0ionBd589OxUiC3uCUw:1649279953884
        - narrow down to a few areas of focus
        - 


4-4-22 - SE3EM 1n1
    - Determine learning styles for menteeships
        - what are the different styles?
        - we can try splitting them up more
        - unify terminology we use can help
    - ask for clarity on directors role in managing the team
    - SMLP taking him from team
        - maybe I can share the load?
    - feedback on angular testing talks
        - going well
        - next step might be to talk with engagement team about it, try to find a partner with interest

4-1-22 - SE1AD 1n1
    - LeetCode practice valid-parenthesis
    - used C#

4-1-22 - Team Meeting
        - SMLP Questions
            - How do we avoid increasing mistakes with multiple 'owners' of changes?
                - small commits
                - even current setup releases defects at times
            - Will they be on call?
                - eventually, needs time to get acclimated
                - hopefully we can use good apm to monitor defects 
            - How do we respond when things go wrong?
                - teams should be ready and willing to help
                - outages will take precedence over sprint work
        - New team formation
            - organize around epics
            - introduce opportunities for growth and cross pollination
            - How will epics be prioritized?
                - will still be per team
                - 1 epic per team per quarter
            - sounds like teams will not be able to pick epics
                - it will take time to shift from what we do now
                - how can we assure this will happen if this is what we want?
            - epics will get away from quarter
            - product will be shifting to use metrics to measure success
            - Will product be growing?
                - will ask in next 1n1
        - EM3MH will be alternating weeks on which team gets most time
        - Board improvements
            - we want to reduce invisible work
            - need to track triages, issue investigations, excited
            - what are the biggest things we do that cause invisible work?
            - should learning be tracked on the board?
                - no, only things with deliverables should be tracked
    

3-30-22 - OH SE4MN
    - Cohorts feedback
        - topics will change and not just be software coding
        - how do we keep people interested
        - teach if you already know something
        - would it make sense to separate cohorts based on pillars of our engineering
			- data, web/mvc, product/research, ui/ux graphics
         
    - Angular Jasmine testing findings

3-29-22 - 3T
    - MVC vs MVVM, examined LearnosityPlayer
    - seems like we are doing a mix of both
    - services could be models, Microsoft likes to say models should be clean
    - could leverage more razor when delivering our views like speedgrader and class summary

    - NS: think about resources involved in our apps, what would controllers look like?

3-25-22 - 1n1 SE4MN   
    - you are the bridge
	- get to where you can teach
	- knowing which technique to use is key
	- work should be with someone always
	- use git commit tools so you have visibility in code, coauthor
	- learn from those who you mentor, equal collaboration
		- call out when you learn something, "thanks for showing me that"
		- this shows vulnerability and builds culture
		- 
	- be careful of killing curiosity, use "I think" instead of "this is how"
	- remember 1n1s are bi-directional, say "less experienced" instead of "junior"
	- something you can always ask: what should I be doing more of, less of, not doing?
	- make sure people see me accepting feedback publicly
	- always have 2 mentorships and 2 menteeships
	- get a mentor outside the company
	- we can do ongoing sessions
	- how do you examine your practice, how do I know the things I am doing are working?
		- I thanked him for helping us grow and learn in #developers
		- if teaching technique, how will I know they have learned it?
	- 
	- talked about player launch and view controller and how we could reduce dependencies
	- improve while knowing you are enough and staying positive

3-22-22 - 1n1 SE1AD
    - SE3EM and I as mentors
	- Prefers maintenance oriented skills, refactoring, documentation
	- wants to solidify coding terminology like 'create a method' 'return an object' and other pop quiz type stuff
	- tackle easy wins in backlog
		- upgrade ckeditor
		- 

3-22-22 - 1n1 SE0DP
    - Think about setting a goal for us to work on
    - discussed options for things we could do together
        - code challenges
        - deep dive on something SE3EM mentions
        - pop quiz on code topics
